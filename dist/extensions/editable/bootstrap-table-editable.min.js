/**
  * bootstrap-table - An extended Bootstrap table with radio, checkbox, sort, pagination, and other added features. (supports twitter bootstrap v2 and v3).
  *
  * @version v1.13.0
  * @homepage http://bootstrap-table.wenzhixin.net.cn
  * @author wenzhixin <wenzhixin2010@gmail.com> (http://wenzhixin.net.cn/)
  * @license MIT
  */

(function(a,b){if('function'==typeof define&&define.amd)define([],b);else if('undefined'!=typeof exports)b();else{b(),a.bootstrapTableEditable={exports:{}}.exports}})(this,function(){'use strict';(function(a){a.extend(a.fn.bootstrapTable.defaults,{editable:!0,onEditableInit:function(){return!1},onEditableSave:function(){return!1},onEditableShown:function(){return!1},onEditableHidden:function(){return!1}}),a.extend(a.fn.bootstrapTable.Constructor.EVENTS,{"editable-init.bs.table":'onEditableInit',"editable-save.bs.table":'onEditableSave',"editable-shown.bs.table":'onEditableShown',"editable-hidden.bs.table":'onEditableHidden'});var b=a.fn.bootstrapTable.Constructor,c=b.prototype.initTable,d=b.prototype.initBody;b.prototype.initTable=function(){var b=this;c.apply(this,Array.prototype.slice.apply(arguments));this.options.editable&&a.each(this.columns,function(c,d){if(d.editable){var e={},f=[],g='editable-',h=function(a,b){var c=a.replace(/([A-Z])/g,function(a){return'-'+a.toLowerCase()});if(c.slice(0,g.length)==g){var d=c.replace(g,'data-');e[d]=b}};a.each(b.options,h),d.formatter=d.formatter||function(a){return a},d._formatter=d._formatter?d._formatter:d.formatter,d.formatter=function(c,g,i){var j=a.fn.bootstrapTable.utils.calculateObjectValue(d,d._formatter,[c,g,i],c);a.each(d,h),a.each(e,function(a,b){f.push(' '+a+'="'+b+'"')});var k=!1;return d.editable.hasOwnProperty('noeditFormatter')&&(k=d.editable.noeditFormatter(c,g,i)),!1===k?['<a href="javascript:void(0)"',' data-name="'+d.field+'"',' data-pk="'+g[b.options.idField]+'"',' data-value="'+j+'"',f.join(''),'></a>'].join(''):k}}})},b.prototype.initBody=function(){var b=this;d.apply(this,Array.prototype.slice.apply(arguments));this.options.editable&&(a.each(this.columns,function(c,d){if(d.editable){var e=b.getData();b.$body.find('a[data-name="'+d.field+'"]').each(function(b,c){var f=a(c),g=f.closest('tr'),h=g.data('index'),i=e[h],j=a.fn.bootstrapTable.utils.calculateObjectValue(d,d.editable,[h,i,f],{});f.editable(j)}),b.$body.find('a[data-name="'+d.field+'"]').editable(d.editable).off('save').on('save',function(c,e){var f=b.getData(),g=a(this).parents('tr[data-index]').data('index'),h=f[g],i=h[d.field];a(this).data('value',e.submitValue),h[d.field]=e.submitValue,b.trigger('editable-save',d.field,h,i,a(this)),b.resetFooter()}),b.$body.find('a[data-name="'+d.field+'"]').editable(d.editable).off('shown').on('shown',function(c,e){var f=b.getData(),g=a(this).parents('tr[data-index]').data('index'),h=f[g];b.trigger('editable-shown',d.field,h,a(this),e)}),b.$body.find('a[data-name="'+d.field+'"]').editable(d.editable).off('hidden').on('hidden',function(c,e){var f=b.getData(),g=a(this).parents('tr[data-index]').data('index'),h=f[g];b.trigger('editable-hidden',d.field,h,a(this),e)})}}),this.trigger('editable-init'))}})(jQuery)});